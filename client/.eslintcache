[{"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\App.js":"1","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\index.js":"2","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\App.js":"3","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\index.js":"4","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\CommitGraph.js":"5","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\LanguagePiechart.js":"6","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\CommitsPerDayGraph.js":"7"},{"size":4873,"mtime":1608324533443,"results":"8","hashOfConfig":"9"},{"size":199,"mtime":1606851816815,"results":"10","hashOfConfig":"9"},{"size":19510,"mtime":1609425987775,"results":"11","hashOfConfig":"12"},{"size":210,"mtime":1609088190525,"results":"13","hashOfConfig":"12"},{"size":6481,"mtime":1609370908373,"results":"14","hashOfConfig":"12"},{"size":1811,"mtime":1609350268948,"results":"15","hashOfConfig":"12"},{"size":8494,"mtime":1609425904244,"results":"16","hashOfConfig":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11an0sc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hhzxma",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\App.js",[],"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\index.js",[],"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\App.js",["32","33","34","35","36","37","38"],"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\index.js",[],"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\CommitGraph.js",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { Container, Row, Col, Accordion, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function CommitGraph({ commitData }) {\r\n  const [selectedDatapointIndex, setSelectedDatapointIndex] = useState(0);\r\n  const [datapointSelected, setDatapointSelected] = useState(false);\r\n\r\n  const datapointClickHandler = (data) => {\r\n    setDatapointSelected(true);\r\n    setSelectedDatapointIndex(parseInt(data.index));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDatapointSelected(false);\r\n    setSelectedDatapointIndex(0);\r\n  }, [commitData]);\r\n\r\n  return (\r\n    <>\r\n      {/* {console.log(`INDEX: ${selectedDatapointIndex}`)} */}\r\n      <LineChart\r\n        width={730}\r\n        height={250}\r\n        data={commitData}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis dataKey=\"timeBetween\" />\r\n        <Tooltip labelFormatter={() => \"Click datapoint to see more\"} />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"timeBetween\"\r\n          stroke=\"#8884d8\"\r\n          //   activeDot={{\r\n          //     onClick: (index) => {\r\n          //       console.log(\"CLICKED\" + JSON.stringify(index));\r\n          //     },\r\n          //   }}\r\n          activeDot={{ onClick: datapointClickHandler }}\r\n        />\r\n      </LineChart>\r\n\r\n      <Container fluid>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n              <div>More Details</div>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <>\r\n                {/* Datapoint Selected */}\r\n                {datapointSelected && selectedDatapointIndex >= 0 && (\r\n                  <Card.Body>\r\n                    {!(\r\n                      Object.keys(commitData).length === 0 &&\r\n                      commitData.constructor === Object\r\n                    ) && (\r\n                      <div\r\n                        style={{\r\n                          borderBottom: \"1px solid #d9e2ef\",\r\n                          margin: \"2px\",\r\n                          paddingTop: \"10px\",\r\n                          backgroundColor: \"#f1f4f8\",\r\n                          borderRadius: \"3px\",\r\n                        }}\r\n                      >\r\n                        <Container fluid>\r\n                          <Row>\r\n                            <Col>\r\n                              <a\r\n                                href={\r\n                                  commitData[selectedDatapointIndex]\r\n                                    .authorAccountUrl\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={\r\n                                    commitData[selectedDatapointIndex]\r\n                                      .authorAvatarUrl\r\n                                  }\r\n                                  style={{\r\n                                    width: \"32px\",\r\n                                    height: \"32px\",\r\n                                  }}\r\n                                />\r\n                              </a>\r\n                            </Col>\r\n                            <Col>\r\n                              <a\r\n                                href={\r\n                                  commitData[selectedDatapointIndex]\r\n                                    .authorAccountUrl\r\n                                }\r\n                              >\r\n                                <h5>\r\n                                  {\r\n                                    commitData[selectedDatapointIndex]\r\n                                      .authorName\r\n                                  }\r\n                                </h5>\r\n                              </a>\r\n                            </Col>\r\n                            <Col>\r\n                              <a\r\n                                href={\r\n                                  commitData[selectedDatapointIndex].commitUrl\r\n                                }\r\n                              >\r\n                                Go to commit {\">\"}\r\n                              </a>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row\r\n                            style={{\r\n                              paddingTop: \"10px\",\r\n                              backgroundColor: \"white\",\r\n                              margin: \"5px 10px 10px 10px\",\r\n                            }}\r\n                          >\r\n                            <Col>\r\n                              <p>\r\n                                {commitData[selectedDatapointIndex].message}\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <p>\r\n                                Comment Count:{\" \"}\r\n                                {\r\n                                  commitData[selectedDatapointIndex]\r\n                                    .commentCount\r\n                                }\r\n                              </p>\r\n                            </Col>\r\n                            <Col>\r\n                              <p>\r\n                                Date:{\" \"}\r\n                                {new Date(\r\n                                  commitData[selectedDatapointIndex].dateISO\r\n                                ).toString()}\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </Container>\r\n                      </div>\r\n                    )}\r\n                  </Card.Body>\r\n                )}\r\n                {/* Datapoint Not Selected */}\r\n                {(!datapointSelected || selectedDatapointIndex < 0) && (\r\n                  <Card.Body className=\"text-muted\">\r\n                    [Select a datapoint to view more information]\r\n                  </Card.Body>\r\n                )}\r\n              </>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\LanguagePiechart.js",[],"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-datavis\\client\\src\\CommitsPerDayGraph.js",["40","41"],{"ruleId":"42","severity":1,"message":"43","line":35,"column":10,"nodeType":"44","messageId":"45","endLine":35,"endColumn":15},{"ruleId":"42","severity":1,"message":"46","line":35,"column":17,"nodeType":"44","messageId":"45","endLine":35,"endColumn":25},{"ruleId":"42","severity":1,"message":"47","line":47,"column":10,"nodeType":"44","messageId":"45","endLine":47,"endColumn":31},{"ruleId":"42","severity":1,"message":"48","line":47,"column":33,"nodeType":"44","messageId":"45","endLine":47,"endColumn":57},{"ruleId":"42","severity":1,"message":"49","line":48,"column":10,"nodeType":"44","messageId":"45","endLine":48,"endColumn":26},{"ruleId":"42","severity":1,"message":"50","line":48,"column":28,"nodeType":"44","messageId":"45","endLine":48,"endColumn":47},{"ruleId":"42","severity":1,"message":"51","line":56,"column":10,"nodeType":"44","messageId":"45","endLine":56,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":88,"column":33,"nodeType":"54","endLine":97,"endColumn":35},{"ruleId":"55","severity":1,"message":"56","line":27,"column":6,"nodeType":"57","endLine":27,"endColumn":18,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"53","line":149,"column":41,"nodeType":"54","endLine":155,"endColumn":43},"no-unused-vars","'debug' is assigned a value but never used.","Identifier","unusedVar","'setDebug' is assigned a value but never used.","'commitDensityInfoOpen' is assigned a value but never used.","'setCommitDensityInfoOpen' is assigned a value but never used.","'languageInfoOpen' is assigned a value but never used.","'setLanguageInfoOpen' is assigned a value but never used.","'commitDataLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parseDayData'. Either include it or remove the dependency array.","ArrayExpression",["59"],{"desc":"60","fix":"61"},"Update the dependencies array to be: [commitData, parseDayData]",{"range":"62","text":"63"},[803,815],"[commitData, parseDayData]"]