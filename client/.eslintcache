[{"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\App.js":"1","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\index.js":"2"},{"size":2865,"mtime":1607704978665,"results":"3","hashOfConfig":"4"},{"size":199,"mtime":1606851816815,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"11an0sc",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\App.js",["11"],"import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction App() {\n  console.log(\"Log\");\n\n  const [serverResponses, setServerResponses] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const hitBackend = () => {\n    axios.get(\"/test\").then((response) => {\n      console.log(response.data);\n      setServerResponses((serverResponses) => [\n        ...serverResponses,\n        response.data,\n      ]);\n    });\n  };\n\n  const stockRequest = () => {\n    axios\n      .get(\"https://api.github.com/search/users?q=esjmb\")\n      .then((response) => {\n        console.log(response.data);\n      });\n  };\n\n  const submitUserRequest = () => {\n    if (username !== \"\") {\n\n      axios\n        .get(`https://api.github.com/search/users?q=${username}`)\n        .then((response) => {\n          console.log(response.data);\n          \n          const reposUrl = response.data.items[0].repos_url;\n          const languagesUrl = response.data.items[0].languages_url;\n          console.log(reposUrl);\n          console.log(languagesUrl);\n\n          if (reposUrl) { \n            // print the size of the repository\n            logSizeRepos(username, reposUrl);\n            // print bytes of code by language\n            logBreakdownByLanguage(username, languagesUrl);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n\n    } else console.log(\"Invalid username submitted\");\n  };\n\n  const logSizeRepos = (username, url) => {\n    console.log(`${username}:${url}`)\n    axios\n      .get(`${url}`)\n      .then((res) => {\n        console.log(res.data);\n        let total_size_kbs = 0;\n        \n        let repos = res.data;\n        console.log(repos);\n        repos.forEach(repo => {\n          console.log(`Repo name: ${repo.name}\\nRepo Size (KBs): ${repo.size}`);\n          total_size_kbs += repo.size;\n        });\n\n        console.log(`Total size of ${username}'s public repos: ${total_size_kbs} KBs`);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const logBreakdownByLanguage = (username, url) => {\n    console.log(`${username}:${url}`)\n\n    axios\n      .get(`${url}`)\n      .then((res) => {\n        console.log(res.data)\n\n        let languageSizes = res.data;\n      })\n  }\n\n  return (\n    <>\n      <h1>Hello World!</h1>\n      <button onClick={hitBackend}>Send request</button>\n      <button onClick={stockRequest}>Log Stephen's info</button>\n      <input\n        type=\"text\"\n        value={username}\n        onChange={(e) => {\n          setUsername(e.target.value);\n        }}\n      />\n      <button onClick={submitUserRequest}>Submit</button>\n      <p>{username}</p>\n      {serverResponses.map((response, index) => {\n        return (\n          <>\n            <p>{index}</p>\n            <p>{response}</p>\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\clair\\dev\\year3\\software-engineering\\github-access\\client\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":85,"column":13,"nodeType":"14","messageId":"15","endLine":85,"endColumn":26},"no-unused-vars","'languageSizes' is assigned a value but never used.","Identifier","unusedVar"]